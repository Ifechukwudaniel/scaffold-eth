{
  "address": "0x5a91980Bec7bE5c2A9ef352AB3320acE93671daD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "colorInt",
          "type": "uint256"
        }
      ],
      "name": "GetBackgroundColorMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "colorInt",
          "type": "uint256"
        }
      ],
      "name": "GetBackgroundColorText",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "backgroundType",
          "type": "uint256"
        }
      ],
      "name": "GetBackgroundTypeMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "backgroundType",
          "type": "uint256"
        }
      ],
      "name": "GetBackgroundTypeText",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xada56ba32d734c9694e6d8874379df6baf1ae01c1e2eb6286615d9be4e0990fe",
  "receipt": {
    "to": null,
    "from": "0x162B12a38ad616e222Beeb82e426219C005c0907",
    "contractAddress": "0x5a91980Bec7bE5c2A9ef352AB3320acE93671daD",
    "transactionIndex": 53,
    "gasUsed": "729990",
    "logsBloom": "0x
    "blockHash": "0xbcf158476c20adb4c08c0d0ea68abd8ed24f3deb4f0a4777c23206a0cd555030",
    "transactionHash": "0xada56ba32d734c9694e6d8874379df6baf1ae01c1e2eb6286615d9be4e0990fe",
    "logs": [],
    "blockNumber": 8434889,
    "cumulativeGasUsed": "9929991",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "2c0b1c170c4de5b7afae43902d08728c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"colorInt\",\"type\":\"uint256\"}],\"name\":\"GetBackgroundColorMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"colorInt\",\"type\":\"uint256\"}],\"name\":\"GetBackgroundColorText\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"backgroundType\",\"type\":\"uint256\"}],\"name\":\"GetBackgroundTypeMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"backgroundType\",\"type\":\"uint256\"}],\"name\":\"GetBackgroundTypeText\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SockBackground/BackgroundMetadataLibrary.sol\":\"BackgroundMetadataLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SockBackground/BackgroundMetadataLibrary.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\n//SPDX-License-Identifier: MIT\\n\\nlibrary BackgroundMetadataLibrary {\\n    function GetBackgroundColorMetadata(\\n        uint256 colorInt\\n    ) public pure returns (string memory) {\\n        string\\n            memory colorProperty = '{\\\"trait_type\\\":\\\"Background Color\\\", \\\"value\\\":\\\"';\\n        if (colorInt == 0) {\\n            // WHITE\\n            return string(abi.encodePacked(colorProperty, 'White\\\"}'));\\n        } else if (colorInt == 1) {\\n            // GRAY\\n            return string(abi.encodePacked(colorProperty, 'Gray\\\"}'));\\n        } else if (colorInt == 2) {\\n            //Orange\\n            return string(abi.encodePacked(colorProperty, 'Orange\\\"}'));\\n        } else if (colorInt == 3) {\\n            //Pink\\n            return string(abi.encodePacked(colorProperty, 'Pink\\\"}'));\\n        } else if (colorInt == 4) {\\n            //YELLOW\\n            return string(abi.encodePacked(colorProperty, 'Yellow\\\"}'));\\n        } else if (colorInt == 5) {\\n            //BRIGHT YELLOW\\n            return string(abi.encodePacked(colorProperty, 'Bright Yellow\\\"}'));\\n        } else if (colorInt == 6) {\\n            //Green\\n            return string(abi.encodePacked(colorProperty, 'Green\\\"}'));\\n        } else if (colorInt == 7) {\\n            //Blue\\n            return string(abi.encodePacked(colorProperty, 'Blue\\\"}'));\\n        } else if (colorInt == 8) {\\n            //Dark Blue\\n            return string(abi.encodePacked(colorProperty, 'Dark Blue\\\"}'));\\n        } else if (colorInt == 9) {\\n            //Dark Pink\\n            return string(abi.encodePacked(colorProperty, 'Dark Pink\\\"}'));\\n        } else if (colorInt == 10) {\\n            // Black\\n            return string(abi.encodePacked(colorProperty, 'Black\\\"}'));\\n        }\\n\\n        return string(abi.encodePacked(colorProperty, 'None\\\"}'));\\n    }\\n\\n    function GetBackgroundColorText(\\n        uint256 colorInt\\n    ) public pure returns (string memory) {\\n        if (colorInt == 0) {\\n            // WHITE\\n            return \\\"White\\\";\\n        } else if (colorInt == 1) {\\n            // GRAY\\n            return \\\"Gray\\\";\\n        } else if (colorInt == 2) {\\n            //Orange\\n            return \\\"Orange\\\";\\n        } else if (colorInt == 3) {\\n            //Pink\\n            return \\\"Pink\\\";\\n        } else if (colorInt == 4) {\\n            //YELLOW\\n            return \\\"Yellow\\\";\\n        } else if (colorInt == 5) {\\n            //BRIGHT YELLOW\\n            return \\\"Bright Yellow\\\";\\n        } else if (colorInt == 6) {\\n            //Green\\n            return \\\"Green\\\";\\n        } else if (colorInt == 7) {\\n            //Blue\\n            return \\\"Blue\\\";\\n        } else if (colorInt == 8) {\\n            //Dark Blue\\n            return \\\"Dark Blue\\\";\\n        } else if (colorInt == 9) {\\n            //Dark Pink\\n            return \\\"Dark Pink\\\";\\n        } else if (colorInt == 10) {\\n            // Black\\n            return \\\"Black\\\";\\n        }\\n\\n        return \\\"No\\\";\\n    }\\n\\n    function GetBackgroundTypeMetadata(\\n        uint256 backgroundType\\n    ) public pure returns (string memory) {\\n        string\\n            memory backgroundTypeProperty = '{\\\"trait_type\\\": \\\"Background Type\\\", \\\"value\\\":\\\"';\\n        // NATURAL WOOD\\n        if (backgroundType == 10) {\\n            return\\n                string(\\n                    abi.encodePacked(backgroundTypeProperty, 'Natural Wood\\\"}')\\n                );\\n        } else if (backgroundType == 15) {\\n            //Grey Wood\\n            return\\n                string(abi.encodePacked(backgroundTypeProperty, 'Gray Wood\\\"}'));\\n        } else if (backgroundType == 20) {\\n            // Basic  Tile\\n            return\\n                string(\\n                    abi.encodePacked(backgroundTypeProperty, 'Basic Tile\\\"}')\\n                );\\n        } else if (backgroundType == 25) {\\n            // Cold Alps\\n            return\\n                string(\\n                    abi.encodePacked(\\n                        backgroundTypeProperty,\\n                        'Cold Alps\\\"}',\\n                        ',{\\\"trait_type\\\": \\\"Hanged\\\", \\\"value\\\":\\\"True\\\"}'\\n                    )\\n                );\\n        } else if (backgroundType == 30) {\\n            // Alps\\n            return\\n                string(\\n                    abi.encodePacked(\\n                        backgroundTypeProperty,\\n                        'Alps\\\"}',\\n                        ',{\\\"trait_type\\\": \\\"Hanged\\\", \\\"value\\\":\\\"True\\\"}'\\n                    )\\n                );\\n        } else if (backgroundType == 3) {\\n            return string(abi.encodePacked(backgroundTypeProperty, 'Flower\\\"}'));\\n        } else if (backgroundType == 6) {\\n            return string(abi.encodePacked(backgroundTypeProperty, 'Leaves\\\"}'));\\n        } else if (backgroundType == 12) {\\n            return string(abi.encodePacked(backgroundTypeProperty, 'Pillow\\\"}'));\\n        } else if (backgroundType == 18) {\\n            return string(abi.encodePacked(backgroundTypeProperty, 'Rug\\\"}'));\\n        } else if (backgroundType == 24) {\\n            return string(abi.encodePacked(backgroundTypeProperty, 'Water\\\"}'));\\n        }\\n\\n        return string(abi.encodePacked(backgroundTypeProperty, 'Plain\\\"}'));\\n    }\\n\\n    function GetBackgroundTypeText(\\n        uint256 backgroundType\\n    ) public pure returns (string memory) {\\n        // NATURAL WOOD\\n        if (backgroundType == 10) {\\n            return \\\"Natural Wood\\\";\\n        } else if (backgroundType == 15) {\\n            //Grey Wood\\n            return \\\"Gray Wood\\\";\\n        } else if (backgroundType == 20) {\\n            // Basic  Tile\\n            return \\\"Basic Tile\\\";\\n        } else if (backgroundType == 25) {\\n            // Cold Alps\\n            return \\\"Cold Alps\\\";\\n        } else if (backgroundType == 30) {\\n            // Alps\\n            return \\\"Alps\\\";\\n        } else if (backgroundType == 3) {\\n            return \\\"Flower\\\";\\n        } else if (backgroundType == 6) {\\n            return \\\"Leaves\\\";\\n        } else if (backgroundType == 12) {\\n            return \\\"Pillow\\\";\\n        } else if (backgroundType == 18) {\\n            return \\\"Rug\\\";\\n        } else if (backgroundType == 24) {\\n            return \\\"Water\\\";\\n        }\\n        return \\\"Plain\\\";\\n    }\\n}\\n\",\"keccak256\":\"0xdba78dd74e71e0590aa02da079a96d1e9cbe62e556a629e605d1ba4deab1e263\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461001a57610c3b9081610020823930815050f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630353b077146100945780633cb067d214610080578063a81f66ed1461006c5763e28b34df1461004857600080fd5b61006861005c610057366100a8565b610731565b604051918291826100f4565b0390f35b61006861005c61007b366100a8565b6101f4565b61006861005c61008f366100a8565b61062e565b61006861005c6100a3366100a8565b610b55565b60209060031901126100ba5760043590565b600080fd5b918091926000905b8282106100df5750116100d8575050565b6000910152565b915080602091830151818601520182916100c7565b6040916020825261011481518092816020860152602086860191016100bf565b601f01601f1916010190565b6040810190811067ffffffffffffffff82111761013c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761013c57604052565b604051906060820182811067ffffffffffffffff82111761013c57604052602b8252565b6101a0610174565b7f7b2274726169745f74797065223a224261636b67726f756e6420436f6c6f722260208201526a1610113b30b63ab2911d1160a91b604082015290565b906101f0602092828151948592016100bf565b0190565b6101fc610198565b9080610241575061023e61021d9161023060405193849260208401906101dd565b665768697465227d60c81b815260070190565b03601f198101835282610152565b90565b60018103610276575061023e6102649161023060405193849260208401906101dd565b6547726179227d60d01b815260060190565b600281036102ad575061023e6102999161023060405193849260208401906101dd565b674f72616e6765227d60c01b815260080190565b600381036102e2575061023e6102d09161023060405193849260208401906101dd565b6550696e6b227d60d01b815260060190565b60048103610319575061023e6103059161023060405193849260208401906101dd565b6759656c6c6f77227d60c01b815260080190565b60058103610357575061023e61033c9161023060405193849260208401906101dd565b6e4272696768742059656c6c6f77227d60881b8152600f0190565b6006810361038d575061023e61037a9161023060405193849260208401906101dd565b66477265656e227d60c81b815260070190565b600781036103c2575061023e6103b09161023060405193849260208401906101dd565b65426c7565227d60d01b815260060190565b600881036103fc575061023e6103e59161023060405193849260208401906101dd565b6a4461726b20426c7565227d60a81b8152600b0190565b60098103610436575061023e61041f9161023060405193849260208401906101dd565b6a4461726b2050696e6b227d60a81b8152600b0190565b600a146104695761023e6104579161023060405193849260208401906101dd565b654e6f6e65227d60d01b815260060190565b61023e6104839161023060405193849260208401906101dd565b66426c61636b227d60c81b815260070190565b604051906104a382610120565b6005825264426c61636b60d81b6020830152565b604051906104c482610120565b60098252684461726b2050696e6b60b81b6020830152565b604051906104e982610120565b60098252684461726b20426c756560b81b6020830152565b6040519061050e82610120565b6004825263426c756560e01b6020830152565b6040519061052e82610120565b600582526423b932b2b760d91b6020830152565b6040519061054f82610120565b600d82526c4272696768742059656c6c6f7760981b6020830152565b6040519061057882610120565b600682526559656c6c6f7760d01b6020830152565b6040519061059a82610120565b600482526350696e6b60e01b6020830152565b604051906105ba82610120565b60068252654f72616e676560d01b6020830152565b604051906105dc82610120565b60048252634772617960e01b6020830152565b604051906105fc82610120565b6005825264576869746560d81b6020830152565b6040519061061d82610120565b60028252614e6f60f01b6020830152565b8061063c575061023e6105ef565b6001810361064d575061023e6105cf565b6002810361065e575061023e6105ad565b6003810361066f575061023e61058d565b60048103610680575061023e61056b565b60058103610691575061023e610542565b600681036106a2575061023e610521565b600781036106b3575061023e610501565b600881036106c4575061023e6104dc565b600981036106d5575061023e6104b7565b600a146106e45761023e610610565b61023e610496565b6106f4610174565b7f7b2274726169745f74797065223a20224261636b67726f756e6420547970652260208201526a1610113b30b63ab2911d1160a91b604082015290565b6107396106ec565b90600a8103610777575061023e61075d9161023060405193849260208401906101dd565b6d4e61747572616c20576f6f64227d60901b8152600e0190565b600f81036107b1575061023e61079a9161023060405193849260208401906101dd565b6a4772617920576f6f64227d60a81b8152600b0190565b601481036107ec575061023e6107d49161023060405193849260208401906101dd565b6b42617369632054696c65227d60a01b8152600c0190565b60198103610864575061023e6108129161023061082960405194859360208501906101dd565b6a436f6c6420416c7073227d60a81b8152600b0190565b7f2c7b2274726169745f74797065223a202248616e676564222c202276616c7565815268223a2254727565227d60b81b602082015260290190565b601e810361089c575061023e61088a9161023061082960405194859360208501906101dd565b65416c7073227d60d01b815260060190565b600381036108d3575061023e6108bf9161023060405193849260208401906101dd565b67466c6f776572227d60c01b815260080190565b6006810361090a575061023e6108f69161023060405193849260208401906101dd565b674c6561766573227d60c01b815260080190565b600c8103610941575061023e61092d9161023060405193849260208401906101dd565b6750696c6c6f77227d60c01b815260080190565b60128103610975575061023e6109649161023060405193849260208401906101dd565b64527567227d60d81b815260050190565b6018146109a95761023e6109969161023060405193849260208401906101dd565b66506c61696e227d60c81b815260070190565b61023e6109c39161023060405193849260208401906101dd565b665761746572227d60c81b815260070190565b604051906109e382610120565b60058252642bb0ba32b960d91b6020830152565b60405190610a0482610120565b600382526252756760e81b6020830152565b60405190610a2382610120565b600682526550696c6c6f7760d01b6020830152565b60405190610a4582610120565b60068252654c656176657360d01b6020830152565b60405190610a6782610120565b6006825265233637bbb2b960d11b6020830152565b60405190610a8982610120565b6004825263416c707360e01b6020830152565b60405190610aa982610120565b6009825268436f6c6420416c707360b81b6020830152565b60405190610ace82610120565b600a82526942617369632054696c6560b01b6020830152565b60405190610af482610120565b600982526811dc985e4815dbdbd960ba1b6020830152565b60405190610b1982610120565b600c82526b13985d1d5c985b0815dbdbd960a21b6020830152565b60405190610b4182610120565b6005825264283630b4b760d91b6020830152565b600a8103610b66575061023e610b0c565b600f8103610b77575061023e610ae7565b60148103610b88575061023e610ac1565b60198103610b99575061023e610a9c565b601e8103610baa575061023e610a7c565b60038103610bbb575061023e610a5a565b60068103610bcc575061023e610a38565b600c8103610bdd575061023e610a16565b60128103610bee575061023e6109f7565b601814610bfd5761023e610b34565b61023e6109d656fea26469706673582212202022f803085dfcc60228b7e8e562a266d29c90240a4f46caa36cef2baa28fdb664736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c80630353b077146100945780633cb067d214610080578063a81f66ed1461006c5763e28b34df1461004857600080fd5b61006861005c610057366100a8565b610731565b604051918291826100f4565b0390f35b61006861005c61007b366100a8565b6101f4565b61006861005c61008f366100a8565b61062e565b61006861005c6100a3366100a8565b610b55565b60209060031901126100ba5760043590565b600080fd5b918091926000905b8282106100df5750116100d8575050565b6000910152565b915080602091830151818601520182916100c7565b6040916020825261011481518092816020860152602086860191016100bf565b601f01601f1916010190565b6040810190811067ffffffffffffffff82111761013c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761013c57604052565b604051906060820182811067ffffffffffffffff82111761013c57604052602b8252565b6101a0610174565b7f7b2274726169745f74797065223a224261636b67726f756e6420436f6c6f722260208201526a1610113b30b63ab2911d1160a91b604082015290565b906101f0602092828151948592016100bf565b0190565b6101fc610198565b9080610241575061023e61021d9161023060405193849260208401906101dd565b665768697465227d60c81b815260070190565b03601f198101835282610152565b90565b60018103610276575061023e6102649161023060405193849260208401906101dd565b6547726179227d60d01b815260060190565b600281036102ad575061023e6102999161023060405193849260208401906101dd565b674f72616e6765227d60c01b815260080190565b600381036102e2575061023e6102d09161023060405193849260208401906101dd565b6550696e6b227d60d01b815260060190565b60048103610319575061023e6103059161023060405193849260208401906101dd565b6759656c6c6f77227d60c01b815260080190565b60058103610357575061023e61033c9161023060405193849260208401906101dd565b6e4272696768742059656c6c6f77227d60881b8152600f0190565b6006810361038d575061023e61037a9161023060405193849260208401906101dd565b66477265656e227d60c81b815260070190565b600781036103c2575061023e6103b09161023060405193849260208401906101dd565b65426c7565227d60d01b815260060190565b600881036103fc575061023e6103e59161023060405193849260208401906101dd565b6a4461726b20426c7565227d60a81b8152600b0190565b60098103610436575061023e61041f9161023060405193849260208401906101dd565b6a4461726b2050696e6b227d60a81b8152600b0190565b600a146104695761023e6104579161023060405193849260208401906101dd565b654e6f6e65227d60d01b815260060190565b61023e6104839161023060405193849260208401906101dd565b66426c61636b227d60c81b815260070190565b604051906104a382610120565b6005825264426c61636b60d81b6020830152565b604051906104c482610120565b60098252684461726b2050696e6b60b81b6020830152565b604051906104e982610120565b60098252684461726b20426c756560b81b6020830152565b6040519061050e82610120565b6004825263426c756560e01b6020830152565b6040519061052e82610120565b600582526423b932b2b760d91b6020830152565b6040519061054f82610120565b600d82526c4272696768742059656c6c6f7760981b6020830152565b6040519061057882610120565b600682526559656c6c6f7760d01b6020830152565b6040519061059a82610120565b600482526350696e6b60e01b6020830152565b604051906105ba82610120565b60068252654f72616e676560d01b6020830152565b604051906105dc82610120565b60048252634772617960e01b6020830152565b604051906105fc82610120565b6005825264576869746560d81b6020830152565b6040519061061d82610120565b60028252614e6f60f01b6020830152565b8061063c575061023e6105ef565b6001810361064d575061023e6105cf565b6002810361065e575061023e6105ad565b6003810361066f575061023e61058d565b60048103610680575061023e61056b565b60058103610691575061023e610542565b600681036106a2575061023e610521565b600781036106b3575061023e610501565b600881036106c4575061023e6104dc565b600981036106d5575061023e6104b7565b600a146106e45761023e610610565b61023e610496565b6106f4610174565b7f7b2274726169745f74797065223a20224261636b67726f756e6420547970652260208201526a1610113b30b63ab2911d1160a91b604082015290565b6107396106ec565b90600a8103610777575061023e61075d9161023060405193849260208401906101dd565b6d4e61747572616c20576f6f64227d60901b8152600e0190565b600f81036107b1575061023e61079a9161023060405193849260208401906101dd565b6a4772617920576f6f64227d60a81b8152600b0190565b601481036107ec575061023e6107d49161023060405193849260208401906101dd565b6b42617369632054696c65227d60a01b8152600c0190565b60198103610864575061023e6108129161023061082960405194859360208501906101dd565b6a436f6c6420416c7073227d60a81b8152600b0190565b7f2c7b2274726169745f74797065223a202248616e676564222c202276616c7565815268223a2254727565227d60b81b602082015260290190565b601e810361089c575061023e61088a9161023061082960405194859360208501906101dd565b65416c7073227d60d01b815260060190565b600381036108d3575061023e6108bf9161023060405193849260208401906101dd565b67466c6f776572227d60c01b815260080190565b6006810361090a575061023e6108f69161023060405193849260208401906101dd565b674c6561766573227d60c01b815260080190565b600c8103610941575061023e61092d9161023060405193849260208401906101dd565b6750696c6c6f77227d60c01b815260080190565b60128103610975575061023e6109649161023060405193849260208401906101dd565b64527567227d60d81b815260050190565b6018146109a95761023e6109969161023060405193849260208401906101dd565b66506c61696e227d60c81b815260070190565b61023e6109c39161023060405193849260208401906101dd565b665761746572227d60c81b815260070190565b604051906109e382610120565b60058252642bb0ba32b960d91b6020830152565b60405190610a0482610120565b600382526252756760e81b6020830152565b60405190610a2382610120565b600682526550696c6c6f7760d01b6020830152565b60405190610a4582610120565b60068252654c656176657360d01b6020830152565b60405190610a6782610120565b6006825265233637bbb2b960d11b6020830152565b60405190610a8982610120565b6004825263416c707360e01b6020830152565b60405190610aa982610120565b6009825268436f6c6420416c707360b81b6020830152565b60405190610ace82610120565b600a82526942617369632054696c6560b01b6020830152565b60405190610af482610120565b600982526811dc985e4815dbdbd960ba1b6020830152565b60405190610b1982610120565b600c82526b13985d1d5c985b0815dbdbd960a21b6020830152565b60405190610b4182610120565b6005825264283630b4b760d91b6020830152565b600a8103610b66575061023e610b0c565b600f8103610b77575061023e610ae7565b60148103610b88575061023e610ac1565b60198103610b99575061023e610a9c565b601e8103610baa575061023e610a7c565b60038103610bbb575061023e610a5a565b60068103610bcc575061023e610a38565b600c8103610bdd575061023e610a16565b60128103610bee575061023e6109f7565b601814610bfd5761023e610b34565b61023e6109d656fea26469706673582212202022f803085dfcc60228b7e8e562a266d29c90240a4f46caa36cef2baa28fdb664736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}